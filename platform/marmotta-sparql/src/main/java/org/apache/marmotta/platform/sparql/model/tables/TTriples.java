/**
 * Copyright (C) 2013 Salzburg Research.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * This class is generated by jOOQ
 */
package org.apache.marmotta.platform.sparql.model.tables;

import org.apache.marmotta.platform.sparql.model.tables.records.RTriples;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = {"http://www.jooq.org", "2.2.0"},
                            comments = "This class is generated by jOOQ")
public class TTriples extends org.jooq.impl.TableImpl<RTriples> {

	private static final long serialVersionUID = 1665365091;

	/**
	 * The singleton instance of public.triples
	 */
	public static final TTriples TRIPLES = new TTriples();

	/**
	 * The class holding records for this type
	 */
	private static final java.lang.Class<RTriples> __RECORD_TYPE = RTriples.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<RTriples> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public final org.jooq.TableField<RTriples, java.lang.Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<RTriples, java.sql.Timestamp> CREATED = createField("created", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<RTriples, java.lang.Boolean> DELETED = createField("deleted", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<RTriples, java.sql.Timestamp> DELETEDAT = createField("deletedat", org.jooq.impl.SQLDataType.TIMESTAMP, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<RTriples, java.lang.Boolean> INFERRED = createField("inferred", org.jooq.impl.SQLDataType.BOOLEAN, this);

	/**
	 * An uncommented item
	 */
	public final org.jooq.TableField<RTriples, java.lang.Long> VERSION = createField("version", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT triples__fkeba30bb552fbdfe5
	 * FOREIGN KEY (context_id)
	 * REFERENCES public.kiwinode (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<RTriples, java.lang.Long> CONTEXT_ID = createField("context_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT triples__fkeba30bb536cf857c
	 * FOREIGN KEY (creator_id)
	 * REFERENCES public.kiwinode (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<RTriples, java.lang.Long> CREATOR_ID = createField("creator_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT triples__fkeba30bb5d2e5bf7d
	 * FOREIGN KEY (object_id)
	 * REFERENCES public.kiwinode (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<RTriples, java.lang.Long> OBJECT_ID = createField("object_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT triples__fkeba30bb593957dff
	 * FOREIGN KEY (property_id)
	 * REFERENCES public.kiwinode (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<RTriples, java.lang.Long> PROPERTY_ID = createField("predicate_id", org.jooq.impl.SQLDataType.BIGINT, this);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * CONSTRAINT triples__fkeba30bb5c267907c
	 * FOREIGN KEY (subject_id)
	 * REFERENCES public.kiwinode (id)
	 * </pre></code>
	 */
	public final org.jooq.TableField<RTriples, java.lang.Long> SUBJECT_ID = createField("subject_id", org.jooq.impl.SQLDataType.BIGINT, this);

	public TTriples() {
		super("triples", org.apache.marmotta.platform.sparql.model.Public.PUBLIC);
	}

	public TTriples(java.lang.String alias) {
		super(alias, org.apache.marmotta.platform.sparql.model.Public.PUBLIC, TTriples.TRIPLES);
	}

	@Override
	public TTriples as(java.lang.String alias) {
		return new TTriples(alias);
	}
}
