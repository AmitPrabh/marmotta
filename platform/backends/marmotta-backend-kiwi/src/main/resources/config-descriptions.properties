#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###############################################################################
# LMF database configuration
###############################################################################

database.type.description = the database type (h2, postgres or mysql)
database.type.type = java.lang.Enum("h2"|"postgres"|"mysql")

database.url.description = the URL to access the database
database.url.type = java.net.URL

database.user.description = the database user
database.user.type = java.lang.String

database.password.description = the database password
database.password.type = java.lang.String("password")

database.mode.description = the database mode (create, update, validate or off)
database.mode.type = java.lang.Enum("create"|"update"|"validate"|"off")

database.debug.slowqueries.description = enable reporting of slow database queries (produces additional overhead and is not thread safe)
database.debug.slowqueries.type = java.lang.Boolean

database.triples.batchcommit.description = turn on batch commits when storing triples in database transactions (EXPERIMENTAL); \
  if supported by the database backend, this can lead to considerable performance improvements
database.triples.batchcommit.type = java.lang.Boolean

database.triples.batchsize.description = the maximum size of a batch before it is committed to the database; only applicable if \
  batchcommit is enabled
database.triples.batchsize.type = java.lang.Integer(10|0|*)

database.datacenter.id.description = unique datacenter ID of this Apache Marmotta instance; used for generating database ids in cloud installations
database.datacenter.id.type = java.lang.Integer(1|0|*)

database.fulltext.enabled.description = enable/disable fulltext search in SPARQL (PostgreSQL and MySQL only)
database.fulltext.enabled.type = java.lang.Boolean

database.fulltext.languages.description = list of languages supported by fulltext search; a fulltext index will be created for each language (PostgreSQL only)
database.fulltext.languages.type = java.util.List


caching.literal.size.description = size of literal lookup cache
caching.literal.size.type = java.lang.Integer(10|0|*)
caching.uri.size.description     = size of URI resource lookup cache
caching.uri.size.type     = java.lang.Integer(10|0|*)
caching.bnode.size.description   = size of BNode lookup cache
caching.bnode.size.type   = java.lang.Integer(10|0|*)
caching.triple.size.description  = size of triple lookup cache
caching.triple.size.type  = java.lang.Integer(10|0|*)
